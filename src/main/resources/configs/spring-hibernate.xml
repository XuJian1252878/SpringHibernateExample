<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jee="http://www.springframework.org/schema/jee" 
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    	http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/context  
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/jee 
        http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache-4.0.xsd">
	<!-- Hibernate4 -->
	<!-- 加载资源文件，其中包含变量信息，必须在Spring配置文件的最前面加载 -->
	<context:property-placeholder location="classpath:configs/application.properties"/>
	
	<!-- 数据库映射 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" ></property>
		<property name="url" value="${jdbc.url}" ></property>
		<property name="username" value="${jdbc.user}" ></property>
		<property name="password" value="${jdbc.pass}" ></property>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 依赖注入数据源，注入正是上面定义的dataSource -->
		<property name="dataSource" ref="dataSource"></property>
		<property name="packagesToScan">
			<!-- 可以添加多个包含实体类的包 -->
			<list>
				<value>com.websystique.springmvc.model</value>
			</list>
		</property>
		<!-- 加载configs/application.properties配置文件中的内容 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<!-- 设置数据库方言 -->
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>
			</props>
		</property>
	</bean>
	
	<!-- 配置hibernate的事物管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 配置事物异常封装 -->
	<bean id="persistenceExceptionTranslationPostProcessor" 
       class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
    
    <!-- 声明容器事物管理，transaction-manager指定事务管理器为transactionManager -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
    	<tx:attributes>
    		<!-- 事务执行方式
		    REQUIRED：指定当前方法必需在事务环境中运行，
		         如果当前有事务环境就加入当前正在执行的事务环境，
		         如果当前没有事务，就新建一个事务。
		         这是默认值。 
		    -->
    		<tx:method name="add*" propagation="REQUIRED"/>
    		<tx:method name="get*" propagation="REQUIRED"/>
    		<tx:method name="modify*" propagation="REQUIRED"/>
    		<tx:method name="del*" propagation="REQUIRED"/>
    		<!-- 
               	 指定当前方法以非事务方式执行操作，如果当前存在事务，就把当前事务挂起，等我以非事务的状态运行完，再继续原来的事务。 
             	  查询定义即可
                read-only="true"  表示只读
             -->
    		<tx:method name="*" read-only="true"/>
    	</tx:attributes>
    </tx:advice>
    
    <!-- 将sessionFactory与事务关联起来，否则在调用getCurrentSession的时候会报错 -->
    <!-- http://www.cnphp6.com/archives/112574  Could not obtain transaction-synchronized Session for current thread -->
    <bean id="txAnnotationDriven"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>
    <tx:annotation-driven transaction-manager="txAnnotationDriven"/>
    
    <!-- 定义切面，在 com.dao包下的所有方法中执行有关的hibernate session的事务操作 -->
    <aop:config expose-proxy="true">
    	<!-- 只对业务逻辑层实施事物 -->
    	<!--配置规则，满足以下规则的将拦截，http://blog.csdn.net/kkdelta/article/details/7441829  http://blog.sina.com.cn/s/blog_67aaf4440100x2pb.html -->
    	<aop:pointcut expression="execution(* com.websystique.springmvc.service..*.*(..))" id="txPointcut"/>
    	<!-- Advisor定义，切入点和通知分别为txPointcut、txAdvice -->
    	<aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>
    </aop:config>
    
</beans>